{"version":3,"sources":["Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/Errorboundery.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","searchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Errorboundery","state","haseErrors","error","info","this","setState","Component","App","onsearchChange","event","searchfield","target","value","fetch","then","response","json","users","filtredRobots","filter","robot","name","toLowerCase","includes","length","SearchBox","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6OAgBeA,EAdA,SAAC,GAAW,EAAVC,OAEb,MAAM,IAAIC,MAAM,cCULC,EAZC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,aACjB,OACE,qBAAKC,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCDCK,G,MAPF,SAACC,GACZ,OACE,qBAAKC,MAAO,CAAEC,UAAU,SAAWC,OAAO,kBAAmBC,OAAO,SAApE,SACGJ,EAAMK,aCkBEC,E,kDAnBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAM,CACTC,YAAW,GAHG,E,qDAOlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,YAAW,M,oBAE5B,WAEI,OAAGG,KAAKJ,MAAMC,WACH,oEAEJG,KAAKX,MAAMK,a,GAhBIQ,aC0CbC,E,kDApCb,aAAc,IAAD,8BACX,gBAUFC,eAAe,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAVxC,EAAKZ,MAAM,CACThB,OAAO,GACP0B,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBG,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAC3EF,MAAK,SAAAG,GAAQ,EAAKZ,SAAS,CAACrB,OAAOiC,S,oBAKtC,WAAS,IAAD,OACAC,EAAcd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAC,GAC3C,OAAOA,EAAMC,KAAKC,cAAcC,SAAS,EAAKvB,MAAMU,YAAYY,kBAElE,OAA8B,IAA3BlB,KAAKJ,MAAMhB,OAAOwC,OACZ,oBAAIpC,UAAU,KAAd,qBAIT,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAACqC,EAAD,CAAWtC,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,e,GA7BVQ,IAAMpB,WCKTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.0b642f56.chunk.js","sourcesContent":["import React from 'react';\nimport Card from './Card';\nconst CardList=({robots})=>{\n  if(true){\n    throw new Error(\"noooooooo\");\n  }\n  const CardComponent= robots.map((user,i)=>{\n    return <Card key={i} id={robots[i].id} name={robots[i].name} \n    email={robots[i].email}/>\n  })\n  return (\n    <div>\n      {CardComponent}\n  </div>\n  );\n}\nexport default CardList;","import React from 'react';\n\nconst searchBox=( {searchChange})=>{\n  return(\n    <div className=\"pa2\">\n    <input\n    className='pa3 ba b--green bg-lightest-blue' \n    type=\"search\" \n    placeholder=\"search Robots\"\n    onChange={searchChange}\n    />\n    </div>\n  )\n}\nexport default searchBox;","import React from 'react';\nconst Scroll=(props)=>{\n  return(\n    <div style={{ overflowY:'scroll' , border:'5px solid black', height:'500px'}}>\n      {props.children}\n    </div>\n  )\n}\nexport default Scroll;","import React, { Component } from 'react';\n\nclass Errorboundery extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      haseErrors:false,\n    };\n\n  }\n  componentDidCatch(error, info){\n    this.setState({haseErrors:true});\n  }\n  render(){\n    \n      if(this.state.haseErrors){\n          return <h1>oooops that is not good to be seen</h1>\n      }\n      return this.props.children\n  }\n\n}\nexport default Errorboundery;","import CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport React  from 'react';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\nimport Errorboundery from '../Components/Errorboundery';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      robots:[],\n      searchfield:''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json())\n    .then(users=>{this.setState({robots:users})})\n  }\n  onsearchChange=(event)=>{\n    this.setState({searchfield:event.target.value})\n  }\n  render(){\n    const filtredRobots=this.state.robots.filter(robot=>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n    if(this.state.robots.length===0) {\n      return <h1 className=\"tc\">Loading</h1>\n    }\n    else{\n  return (\n    <div className=\"tc\">\n      <h1 className=\"f1\">Robotfriends</h1>\n      <SearchBox searchChange={this.onsearchChange}/>\n      <Scroll>\n        <Errorboundery>\n          <CardList robots={filtredRobots}/>\n        </Errorboundery>\n      </Scroll>\n    </div>\n  )\n}\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}