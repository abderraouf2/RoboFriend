{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","className","alt","src","width","hight","CardList","robots","CardComponent","map","user","i","searchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onsearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filtredRobots","this","filter","robot","toLowerCase","includes","length","SearchBox","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6OAgBeA,EAdH,SAACC,GACX,IAAOC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,GAAIC,EAAOH,EAAPG,MACjB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,GAAMK,MAAM,MAAMC,MAAM,QACtE,gCACE,6BACGP,IAEH,4BAAIE,WCEGM,EAXA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACTC,EAAeD,EAAOE,KAAI,SAACC,EAAKC,GACpC,OAAO,cAAC,EAAD,CAAcZ,GAAIQ,EAAOI,GAAGZ,GAAID,KAAMS,EAAOI,GAAGb,KACvDE,MAAOO,EAAOI,GAAGX,OADCW,MAGpB,OACE,8BACGH,KCKQI,EAZC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,aACjB,OACE,qBAAKZ,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCDCI,G,MAPF,SAACpB,GACZ,OACE,qBAAKqB,MAAO,CAAEC,UAAU,SAAWC,OAAO,kBAAmBC,OAAO,SAApE,SACGxB,EAAMyB,aCqCEC,E,kDAlCb,aAAc,IAAD,8BACX,gBAUFC,eAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAVxC,EAAKC,MAAM,CACTvB,OAAO,GACPoB,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAC3EF,MAAK,SAAAG,GAAQ,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAKtC,WAAS,IAAD,OACAC,EAAcC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC3C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAElE,OAA8B,IAA3BH,KAAKP,MAAMvB,OAAOmC,OACZ,oBAAIzC,UAAU,KAAd,qBAIT,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC0C,EAAD,CAAW9B,aAAcwB,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ6B,a,GA5BRQ,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.ca680b64.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card= (props) =>{\n  const {name, id, email}=props;\n  return(\n    <div className=\" tc bg-light-blue dib br3 pa3 ma3 grow pw2 shadow-5\">\n      <img alt='robot' src={`https://robohash.org/${id}`} width=\"200\" hight=\"200\"/>\n      <div>\n        <h2>\n          {name}\n        </h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\nconst CardList=({robots})=>{\n  const CardComponent= robots.map((user,i)=>{\n    return <Card key={i} id={robots[i].id} name={robots[i].name} \n    email={robots[i].email}/>\n  })\n  return (\n    <div>\n      {CardComponent}\n  </div>\n  );\n}\nexport default CardList;","import React from 'react';\n\nconst searchBox=( {searchChange})=>{\n  return(\n    <div className=\"pa2\">\n    <input\n    className='pa3 ba b--green bg-lightest-blue' \n    type=\"search\" \n    placeholder=\"search Robots\"\n    onChange={searchChange}\n    />\n    </div>\n  )\n}\nexport default searchBox;","import React from 'react';\nconst Scroll=(props)=>{\n  return(\n    <div style={{ overflowY:'scroll' , border:'5px solid black', height:'500px'}}>\n      {props.children}\n    </div>\n  )\n}\nexport default Scroll;","import CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport React  from 'react';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      robots:[],\n      searchfield:''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json())\n    .then(users=>{this.setState({robots:users})})\n  }\n  onsearchChange=(event)=>{\n    this.setState({searchfield:event.target.value})\n  }\n  render(){\n    const filtredRobots=this.state.robots.filter(robot=>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n    if(this.state.robots.length===0) {\n      return <h1 className=\"tc\">Loading</h1>\n    }\n    else{\n  return (\n    <div className=\"tc\">\n      <h1 className=\"f1\">Robotfriends</h1>\n      <SearchBox searchChange={this.onsearchChange}/>\n      <Scroll>\n        <CardList robots={filtredRobots}/>\n      </Scroll>\n    </div>\n  )\n}\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}